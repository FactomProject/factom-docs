version: 2

jobs:
  build:
    working_directory: ~/factom-docs

    docker:
      - image: factominc/elixir_python

    steps:
      - checkout

      - setup_remote_docker:
          version: 17.06.0-ce

      - restore_cache:
          keys:
            - v1-factom-docs-docker-cache

      # Load the image if the cache hit
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /images/factom_docs.tar | true

      - run:
          name: Make containers
          command: |
            cd slate
            docker build -t factom_docs .

      - run:
          name: Push images to AWS ECR
          command: |
            # Login to AWS ECR
            login="$(aws ecr get-login  --no-include-email --region $AWS_REGION)"
            ${login}

            # apiplus_api_docs
            export factom_docs_container_tag=$(git rev-parse HEAD)
            docker tag factom_docs "${AWS_REPO_BASE_URI}/factom_docs:${factom_docs_container_tag}"
            docker push "${AWS_REPO_BASE_URI}/factom_docs:${factom_docs_container_tag}"


      - run:
          name: Save the image cache for the containers
          command: |
            mkdir -p /images
            docker save -o /images/factom_docs.tar factom_docs $(docker history -q factom_docs |grep -v missing | grep -v none)

      - save_cache:
          key: v1-factom-docs-docker-cache-{{ checksum "slate/Gemfile.lock" }}
          paths:
            - /images

workflows:
  version: 2
  build:
    jobs:
      - build:
          context: org-global
